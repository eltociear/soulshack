name: Go

on:
  push:
    branches: [ "main" ]
    tags:
        - '*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
  release:
    needs: build
    # Only run release job on tags
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Extract project name
      run: echo "PROJECT_NAME=$(basename $GITHUB_REPOSITORY)" >> $GITHUB_ENV

    - name: Build release - Linux amd64
      env:
        GOOS: linux
        GOARCH: amd64
      run: go build -o $PROJECT_NAME-linux-amd64 ./...

    - name: Build release - Linux arm64
      env:
        GOOS: linux
        GOARCH: arm64
      run: go build -o $PROJECT_NAME-linux-arm64 ./...

    - name: Build release - macOS arm64
      env:
        GOOS: darwin
        GOARCH: arm64
      run: go build -o $PROJECT_NAME-darwin-arm64 ./...

    - name: Upload linux amd64 binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}-linux-amd64
        path: ${{ env.PROJECT_NAME }}-linux-amd64

    - name: Upload Linux arm64 binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}-linux-arm64
        path: ${{ env.PROJECT_NAME }}-linux-arm64

    - name: Upload macOS arm64 binary
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.PROJECT_NAME }}-darwin-arm64
        path: ${{ env.PROJECT_NAME }}-darwin-arm64

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.GITHUB_REF#refs/tags/ }}
        release_name: ${{ env.GITHUB_REF#refs/tags/ }}
        draft: false
        prerelease: false

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          ${{ env.PROJECT_NAME }}-linux-amd64
          ${{ env.PROJECT_NAME }}-linux-arm64
          ${{ env.PROJECT_NAME }}-darwin-arm64

    - name: Attach Artifacts to Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.PROJECT_NAME }}-linux-amd64
        asset_name: ${{ env.PROJECT_NAME }}-linux-amd64
        asset_content_type: application/octet-stream

    - name: Attach Artifacts to Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.PROJECT_NAME }}-linux-arm64
        asset_name: ${{ env.PROJECT_NAME }}-linux-arm64
        asset_content_type: application/octet-stream
        

    - name: Attach Artifacts to Release
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.PROJECT_NAME }}-darwin-arm64
        asset_name: ${{ env.PROJECT_NAME }}-darwin-arm64
        asset_content_type: application/octet-stream
